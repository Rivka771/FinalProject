//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class YedidimDBEntities : DbContext
    {
        public YedidimDBEntities()
            : base("name=YedidimDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AssignedRequests> AssignedRequests { get; set; }
        public virtual DbSet<HelpSeekers> HelpSeekers { get; set; }
        public virtual DbSet<Requests> Requests { get; set; }
        public virtual DbSet<Services> Services { get; set; }
        public virtual DbSet<Volunteers> Volunteers { get; set; }
        public virtual DbSet<VolunteerServices> VolunteerServices { get; set; }
    
        public virtual ObjectResult<GetAllDetails_Result> GetAllDetails(Nullable<int> idV)
        {
            var idVParameter = idV.HasValue ?
                new ObjectParameter("idV", idV) :
                new ObjectParameter("idV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDetails_Result>("GetAllDetails", idVParameter);
        }
    
        public virtual ObjectResult<GetAvailableVolunteersByService_Result> GetAvailableVolunteersByService(Nullable<int> serviceID)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAvailableVolunteersByService_Result>("GetAvailableVolunteersByService", serviceIDParameter);
        }
    
        public virtual int GetVolunteerHours(Nullable<int> idV, ObjectParameter totalHoursThisMonth, ObjectParameter avgHoursLastMonth)
        {
            var idVParameter = idV.HasValue ?
                new ObjectParameter("idV", idV) :
                new ObjectParameter("idV", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVolunteerHours", idVParameter, totalHoursThisMonth, avgHoursLastMonth);
        }
    
        public virtual int GetVolunteerAndRequestStatsForService(Nullable<int> serviceID, ObjectParameter volunteerCount, ObjectParameter approvedRequestCount)
        {
            var serviceIDParameter = serviceID.HasValue ?
                new ObjectParameter("ServiceID", serviceID) :
                new ObjectParameter("ServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVolunteerAndRequestStatsForService", serviceIDParameter, volunteerCount, approvedRequestCount);
        }
    }
}
